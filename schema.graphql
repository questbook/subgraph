enum GrantFieldInputType {
  short_form,
  long_form,
  numeric,
  array
}

enum WorkspaceMemberAccessLevel {
  owner,
  admin,
  member,
  reviewer
}

enum MilestoneState { 
  submitted,
  requested,
  approved
}

enum ApplicationState { 
  submitted,
  resubmit,
  approved,
  rejected,
  completed
}

enum NotificationType {
  application_submitted,
  application_resubmitted,
  application_rejected,
  application_accepted,
  milestone_requested,
  milestone_accepted,
  milestone_rejected,
  funds_disbursed,
  funds_deposited,
  funds_withdrawn,
  application_completed
}

enum FundsTransferType {
  funds_disbursed,
  funds_deposited,
  funds_withdrawn
}

enum SupportedNetwork {
  chain_1,
  chain_4,
  chain_10,
  chain_137,
  chain_80001,
  chain_1666700000,
  chain_1666600000
}

type Social @entity {
  id: ID!
  "Name of the network. Eg. twitter, discord"
  name: String!
  "Handle or URL"
  value: String!
}

type GrantField @entity {
  id: ID!
  title: String!
  inputType: GrantFieldInputType!
  possibleValues: [String!]
  isPii: Boolean!
}

type GrantFieldAnswerItem @entity {
  id: ID!
  answer: GrantFieldAnswer!
  value: String!
  walletId: Bytes
}

type GrantFieldAnswer @entity {
  id: ID!
  field: GrantField!
  values: [GrantFieldAnswerItem!]! @derivedFrom(field: "answer")
}

type Reward @entity {
  id: ID!
	asset: Bytes!
	committed: BigInt!
}

type RubricItem @entity {
  id: ID!
  title: String!
  details: String!
  maximumPoints: Int!
}

type Rubric @entity {
  id: ID!
  items: [RubricItem!]!
  "Is private evaluation"
  isPrivate: Boolean!
  "Unix timestamp of when the rubric was created"
  createdAtS: Int!
  "Unix timestamp of when the rubric was updated"
  updatedAtS: Int!
  "Who added this rubric"
  addedBy: WorkspaceMember
}

type Review @entity {
  id: ID!
  "Application for which the review is"
  application: GrantApplication!
  "ID of the reviewer"
  reviewerId: String!
  "Workspace member that reviewed the app"
  reviewer: WorkspaceMember
  "created at S"
  createdAtS: Int!
  "IPFS Hash to the publicly accessible review"
  publicReviewDataHash: String
  "The encrypted data of the review"
  data: [PIIAnswer!]!
}

type Grant @entity {
  id: ID!
  "Address of who created the grant"
  creatorId: Bytes!
	title: String!
  "Short description of the grant"
  summary: String!
  "Expectations & other details of the grant"
  details: String!
  "Proposed reward for the grant"
  reward: Reward!
  "Workspace which created the grant"
  workspace: Workspace!
  "ISO formatted date string"
  deadline: String
  "Expected fields from the applicants of the grant"
  fields: [GrantField!]!
  "Whether the grant is currently accepting applications or not"
  acceptingApplications: Boolean!

  metadataHash: String!
  "in seconds since epoch"
  createdAtS: Int!
  "in seconds since epoch"
  updatedAtS: Int
  "Funding currently present in the grant"
  funding: BigInt!
  "Number of applications in the grant"
  numberOfApplications: Int!
  "List of applications for the grant"
  applications: [GrantApplication!]! @derivedFrom(field: "grant")
  "People who will manage the grant. They can see the PII submitted in an application"
  managers: [GrantManager!]!
  "Rubric for evaulating the grant"
  rubric: Rubric
}

type GrantManager @entity {
  "Globally unique ID of the member"
  id: ID!
  "Grant for which this entity is the manager"
  grant: Grant!
  "Workspace member"
  member: WorkspaceMember
}

type WorkspaceMember @entity {
  "Globally unique ID of the member"
  id: ID!
  "the ID of the member itself"
  actorId: Bytes!
  email: String
  "What permissions the member has on the workspace"
  accessLevel: WorkspaceMemberAccessLevel!
  "Public key of the workspace member"
  publicKey: String
  "When the member was added"
  addedAt: Int!
  "Last update on member"
  updatedAt: Int!
  workspace: Workspace!
}

"Schema for a Workspace or DAO"
type Workspace @entity {
  id: ID!
  "Address of the owner of the workspace"
  ownerId: Bytes!
  "Title of the workspace"
  title: String!
  "General info about the workspace"
  about: String!
  "Hash to fetch the logo"
  logoIpfsHash: String!
  "Cover image for the workspace"
  coverImageIpfsHash: String
  "List of supported networks of the workspace"
  supportedNetworks: [SupportedNetwork!]!
  "in seconds since epoch"
  createdAtS: Int!
  "in seconds since epoch"
  updatedAtS: Int!
  "Members of the workspace"
  members: [WorkspaceMember!]! @derivedFrom(field: "workspace")
  "List of social media handles of the workspace"
  socials: [Social!]!
  "Hash of the IPFS file from which the details about the workspace were pulled"
  metadataHash: String!
}

"the milestone of a grant application"
type ApplicationMilestone @entity {
  id: ID!
  state: MilestoneState!
  title: String!
  "amount expected by applicant"
  amount: BigInt!
  "amount paid by DAO"
  amountPaid: BigInt!
  "in seconds since epoch"
  updatedAtS: Int
  "Feedback from the grant DAO manager/applicant"
  feedbackDao: String
  "Feedback from the developer"
  feedbackDev: String
}

type PIIAnswer @entity {
  id: ID!
  "Grant manager who can access this encrypted info"
  manager: GrantManager
  "The encrypted data"
  data: String!
}

type GrantApplication @entity {
  id: ID!
  "The grant for which the application is for"
  grant: Grant!
  "Address of the applicant"
  applicantId: Bytes!
  "Current state of the application"
  state: ApplicationState!
  "Answers to the fields requested in the grant"
  fields: [GrantFieldAnswer!]!
  "PII Data"
  pii: [PIIAnswer!]!
  "in seconds since epoch"
  createdAtS: Int!
  "in seconds since epoch"
  updatedAtS: Int!
  "Milestones of the application"
  milestones: [ApplicationMilestone!]!
  "Feedback from the grant DAO manager/applicant"
  feedbackDao: String
  "Feedback from the developer"
  feedbackDev: String
  "Reviews of the application"
  reviews: [Review!]! @derivedFrom(field: "application")
  "People who will review the grant applications"
  reviewers: [WorkspaceMember!]!
}

"A revision after an update"
type GrantApplicationRevision @entity {
  id: ID!

  application: GrantApplication!
  "Who caused the update to create the revision"
  actorId: Bytes!
  "The state that was set in the revision"
  state: ApplicationState!
  "Answers to the fields requested in the grant"
  fields: [GrantFieldAnswer!]!
  "Milestones of the application"
  milestones: [ApplicationMilestone!]!
  "in seconds since epoch, when was this revision created"
  createdAtS: Int!
  "Feedback from the grant DAO manager/applicant"
  feedbackDao: String
  "Feedback from the developer"
  feedbackDev: String
}

type FundsTransfer @entity {
  id: ID!
  "Application for which the funds were released"
  application: GrantApplication
  "Milestone for which the funds were released"
  milestone: ApplicationMilestone
  "Which grant were the funds transferred to/from"
  grant: Grant!
  "How much of the funds were allocated"
  amount: BigInt!
  "Address of who released the funds"
  sender: Bytes!
  "The address to which funds were sent"
  to: Bytes!
  "in seconds since epoch"
  createdAtS: Int!
  "What the type of funds transfer is"
  type: FundsTransferType!
}

type Notification @entity {
  id: ID!
  "title of the notification"
  title: String!
  "rich content of the notification"
  content: String!

  type: NotificationType!
  "The ID of the entity being affected"
  entityId: String!
  "Who all should recv the notification"
  recipientIds: [Bytes!]!
  "Who caused the notification to be sent"
  actorId: Bytes
  "Descending order of cursor"
  cursor: String!
}