// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class GrantCreated extends ethereum.Event {
  get params(): GrantCreated__Params {
    return new GrantCreated__Params(this);
  }
}

export class GrantCreated__Params {
  _event: GrantCreated;

  constructor(event: GrantCreated) {
    this._event = event;
  }

  get grantAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get workspaceId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get metadataHash(): string {
    return this._event.parameters[2].value.toString();
  }

  get time(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class QBGrantFactoryContract extends ethereum.SmartContract {
  static bind(address: Address): QBGrantFactoryContract {
    return new QBGrantFactoryContract("QBGrantFactoryContract", address);
  }

  createGrant(
    _workspaceId: BigInt,
    _metadataHash: string,
    _workspaceRegAddr: Address,
    _applicationRegAddr: Address
  ): Address {
    let result = super.call(
      "createGrant",
      "createGrant(uint96,string,address,address):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(_workspaceId),
        ethereum.Value.fromString(_metadataHash),
        ethereum.Value.fromAddress(_workspaceRegAddr),
        ethereum.Value.fromAddress(_applicationRegAddr)
      ]
    );

    return result[0].toAddress();
  }

  try_createGrant(
    _workspaceId: BigInt,
    _metadataHash: string,
    _workspaceRegAddr: Address,
    _applicationRegAddr: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createGrant",
      "createGrant(uint96,string,address,address):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(_workspaceId),
        ethereum.Value.fromString(_metadataHash),
        ethereum.Value.fromAddress(_workspaceRegAddr),
        ethereum.Value.fromAddress(_applicationRegAddr)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreateGrantCall extends ethereum.Call {
  get inputs(): CreateGrantCall__Inputs {
    return new CreateGrantCall__Inputs(this);
  }

  get outputs(): CreateGrantCall__Outputs {
    return new CreateGrantCall__Outputs(this);
  }
}

export class CreateGrantCall__Inputs {
  _call: CreateGrantCall;

  constructor(call: CreateGrantCall) {
    this._call = call;
  }

  get _workspaceId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _metadataHash(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _workspaceRegAddr(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _applicationRegAddr(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class CreateGrantCall__Outputs {
  _call: CreateGrantCall;

  constructor(call: CreateGrantCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
